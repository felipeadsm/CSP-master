datatype Medicamento = paracetamol | dipirona | dramin | buscopan | amoxilina
datatype Setor = UTI | maternidade | oncologia | pediatria | psiquiatria

NUM = 3
fam = {1..NUM}
banco_de_dados = <(UTI, <paracetamol, dramin>), (maternidade, <dipirona, buscopan>), (oncologia, <paracetamol, amoxilina>), (pediatria, <buscopan, paracetamol>), (psiquiatria, <amoxilina, dramin>)>

channel inicia_software, evento_final, inicia_robo, inicia_gerenciamento
channel receber_medicamento: Medicamento
channel separar_medicamento: Medicamento
channel medicamento_separado: Medicamento

OsRemedios((set, med)) = med

robo = inicia_robo -> separar_medicamento?var -> medicamento_separado.var -> evento_final -> robo

gerencia_de_dispensacao(<>, lista_de_medicamentos) = gerencia_de_dispensacao(<>, lista_de_medicamentos)
gerencia_de_dispensacao(<>, lista_de_medicamentos) = inicia_gerenciamento -> receber_medicamento?var -> separar_medicamento!head(var) -> gerencia_de_dispensacao(<>, tail(var))

software_de_controle(BD) = inicia_software -> receber_medicamento!OsRemedios(head(BD)) -> software_de_controle(tail(BD))

gerencia = gerencia_de_dispensacao(<>, <dramin, dipirona>) [|{|separar_medicamento|}|] robo

processo_3 = gerencia [|{|receber_medicamento|}|] software_de_controle(banco_de_dados) 

assert processo_3 :[deadlock free [F]]
assert processo_3 :[deterministic]
assert processo_3 :[divergence free]

-- |~| posicao_escolhida : posicoes @ listar_possiveis_posicoes!posicao_escolhida
