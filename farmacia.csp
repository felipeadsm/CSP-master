datatype Medicamento = paracetamol | dipirona | dramin | buscopan | amoxilina
datatype Setor = UTI | maternidade | oncologia | pediatria | psiquiatria

REM = {paracetamol, dipirona, dramin, buscopan, amoxilina}
-- Setores: UTI, maternidade, oncologia, pediatria, psiquiatria

-- Constantes

banco_de_dados = {(UTI, (paracetamol, dramin)), (maternidade, (dipirona, buscopan)), (oncologia, (paracetamol, amoxilina)), (pediatria, (buscopan, paracetamol)), (psiquiatria, (amoxilina, dramin))}


-- Braço Robótico
channel garra_abriu, garra_fechou, braco_na_posicao_inicial, posicao_de_seguranca, posicao_deposito, nao_pegou_medicamento
channel pegou_medicamento: Medicamento

-- Softrware de Controle
channel inicia_software, inicia_conexao_do_robo, inicia_dipensacao, coleta_medicamento

-- Banco de Dados
channel atualiza_dados, dispoe_dados

-- Farmaceutico
channel nova_prescricao

-- Operador
channel recupera_prescricoes, gerar_fila_de_prescricoes, conclui_dispencao

-- Gondola
channel gondola_vazia, gondola_reposta, estado_inicial, novo_estado: REM

-- logica de conexao

-- Tem medicamento dispnivel? Como colocar pra ele pegar um remédio específico?
braco_robotico = braco_na_posicao_inicial -> inicia_dipensacao -> posicao_de_seguranca -> garra_abriu -> garra_fechou -> 
																						(pegou_medicamento?remedio -> posicao_deposito -> garra_abriu -> conclui_dispencao -> braco_robotico 
                                                                                        |~| nao_pegou_medicamento -> braco_robotico) 
																						[] gondola_vazia?remedio -> braco_robotico

-- Gondola | Ver algo semelhante a frota de carros
Gondola(remedio, 0) = gondola_vazia.remedio -> gondola_reposta.remedio -> Gondola(remedio, 5)
Gondola(remedio, numero_medicamentos) = estado_inicial.remedio -> pegou_medicamento.remedio -> novo_estado.remedio -> Gondola(remedio, numero_medicamentos - 1)

-- Robô está conectado? Existe algum problema a ser resolvido?
operador = inicia_software -> inicia_conexao_do_robo -> inicia_dipensacao -> coleta_medicamento -> operador

-- Como dispor as prescrições? Como atualizar o banco de dados?
-- banco_de_dados = atualiza_dados -> dispoe_dados -> banco_de_dados

-- Como dispor as prescrições? Como atualizar o banco de dados?
-- atualizar_banco_de_dados = atualizar a partir de banco_de_dados
farmaceutico = nova_prescricao -> atualizar_banco_de_dados -> farmaceutico

-- Recupera depois de iniciado? Teve algum problema na dispensação? Tem remédio disponível? caso não tenha, solicitar reposição ao operador!
software_de_controle(banco_de_dados) = recupera_prescricoes -> gerar_fila_de_prescricoes -> inicia_dipensacao -> conclui_dispencao -> software_de_controle

-- Gôndolas
Gondolas = ||| i: REM @ Gondola(i, 5) -- Cria as gôndolas

-- Sincronizações
farmacia = braco_robotico [|{|pegou_medicamento, gondola_vazia|}|] Gondolas

-- Asserts
assert farmacia :[deadlock free [F]]
assert farmacia :[deterministic]
assert farmacia :[divergence free]